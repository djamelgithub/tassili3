
import 'bootstrap/dist/css/bootstrap.min.css';
import Button from 'react-bootstrap/Button';
import Container from 'react-bootstrap/Container';
import Form from 'react-bootstrap/Form';
import Nav from 'react-bootstrap/Nav';
import Navbar from 'react-bootstrap/Navbar';
import NavDropdown from 'react-bootstrap/NavDropdown';
import Offcanvas from 'react-bootstrap/Offcanvas';
import React, { useState } from 'react'
import { Link } from 'react-router-dom'
import { useSelector, useDispatch } from 'react-redux'
import { logout } from '../../redux/actions/authAction'
//import { GLOBALTYPES } from '../../redux/actions/globalTypes'
import Avatar from '../Avatar'






import Wilayacommune from '../searching/Wilayacommune';
import { getPosts, POST_TYPES } from '../../redux/actions/postAction';
import { getDataAPI } from '../../utils/fetchData';
import Locacionprecioautomobile from '../ranges/Locacionprecioautomobile';
import SearchPosts from '../SearchPosts';


const Header = () => {

  const { auth, theme, homePosts } = useSelector(state => state)
  const expand = false; // Puedes ajustar esto según tus necesidades




  const dispatch = useDispatch()




  const [, setSearchResults] = useState([]);
  const [, setTotalResults] = useState(0);
  const [showSearchFields, setShowSearchFields] = useState(false);
  const [contentValue, setContent] = useState('');

  const [wilayaValue, setWilayaValue] = useState('');
  const [communeValue, setCommuneValue] = useState('');

  const [prixsalle, setPrixsalle] = useState([100, 3000]);

  const [personNameValue, setPersonName] = useState([]);
  const [eventosValue, setEventos] = useState([]);




  const handleReset = () => {
    setContent('');
    setWilayaValue('');
    setCommuneValue('');
    setPersonName('');

    setEventos('');

    setPrixsalle([10, 300]);

    dispatch(getPosts(auth.token));
  };






  const handleBuscar = async () => {

    try {

      let url = `/posts?limit=${homePosts.page * 9}`;

      if (prixsalle[0] !== 10 || prixsalle[1] !== 300) {
        url += `&minprixsalle=${prixsalle[0]}&maxprixsalle=${prixsalle[1]}`;
      }


      if (wilayaValue) {
        url += `&wilaya=${wilayaValue}`;
      }
      if (contentValue) {
        url += `&content=${contentValue}`;
      }
      if (communeValue) {
        url += `&commune=${communeValue}`;
      }

      if (personNameValue) {
        url += `&personName=${personNameValue}`;
      }


      if (eventosValue) {
        url += `&eventos=${eventosValue}`;
      }


      const response = await getDataAPI(url, auth.token);
      setSearchResults(response.data.posts); // Resetea los resultados de búsqueda
      setTotalResults(response.data.result);



      dispatch({
        type: POST_TYPES.GET_POSTS,
        payload: { ...response.data, page: homePosts.page + 1 },
      });

    } catch (error) {
      console.error(error);
    }
  };

  return (
    <>
      <Navbar key={expand} expand={expand} className="bg-body-tertiary mb-3">
        <Container>
          <Navbar.Brand href="/">Tassili</Navbar.Brand>


          <SearchPosts />



          <NavDropdown title={<i className="fa fa-user" style={{ color: 'blue', marginRight: '5px' }}></i>} id="collapsible-nav-dropdown">



            {auth.token ? (
              <>
                <li className="nav-item dropdown" style={{ opacity: 1 }}>
                  <span
                    className="nav-link position-relative"
                    id="navbarDropdown"
                    role="button"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false"
                  >


                  </span>
                  <div
                    className="dropdown-menu"
                    aria-labelledby="navbarDropdown"
                    style={{ transform: 'translateX(75px)' }}
                  >

                  </div>
                </li>

                {auth.user.role === "admin" ? (
                  <li className="nav-item dropdown  bg-primary " style={{
                    opacity: 1,

                  }}>
                    <span
                      className="nav-link dropdown-toggle"
                      id="adminDropdown"
                      role="button"
                      data-toggle="dropdown"
                      aria-haspopup="true"
                      aria-expanded="false"
                    >
                      <Avatar src={auth.user.avatar} size="medium-avatar" />
                    </span>
                    <div className="dropdown-menu" aria-labelledby="adminDropdown">

                      <Link className="dropdown-item" to='/pages/provacodigo'>
                        provacodigo
                      </Link>

                      <Link className="dropdown-item" to='/servicios'>
                        servicios
                      </Link>

                      <Link className="dropdown-item" to={`/profile/${auth.user._id}`}>
                        Profil
                      </Link>
                      <Link className="dropdown-item" to='/categoriaslista/cervices'>
                        publicar anuncio
                      </Link>
                      <Link className="dropdown-item" to='/pages/mapa'>
                        mapa
                      </Link>
                      <Link className="dropdown-item" to='/pages/provacodigo'>
                        prova codigo
                      </Link>


                      <Link className="dropdown-item" to='/pages/filterss'>
                        filters
                      </Link>
                      <Link className="dropdown-item" to='/pages/administracion/index'>
                        administracion index
                      </Link>
                      <label
                        htmlFor="theme"
                        className="dropdown-item"
                        onClick={() =>
                          dispatch({
                            type: GLOBALTYPES.THEME,
                            payload: !theme,
                          })
                        }
                      >
                        {theme ? 'Light mode' : 'Dark mode'}
                      </label>
                      <div className="dropdown-divider"></div>
                      <Link
                        className="dropdown-item"
                        to="/"
                        onClick={() => dispatch(logout())}
                      >
                        Se déconnecter
                      </Link>
                    </div>
                  </li>
                ) : (
                  // Aquí puedes agregar lógica adicional para usuarios normales
                  <li className="nav-item dropdown" style={{ opacity: 1 }}>
                    <span
                      className="nav-link dropdown-toggle"
                      id="userDropdown"
                      role="button"
                      data-toggle="dropdown"
                      aria-haspopup="true"
                      aria-expanded="false"
                    >
                      <Avatar src={auth.user.avatar} size="medium-avatar" />
                    </span>
                    <div className="dropdown-menu" aria-labelledby="userDropdown">
                      <Link className="dropdown-item" to='/pages/provacodigo'>
                        provacodigo
                      </Link>


                      <Link className="dropdown-item" to={`/profile/${auth.user._id}`}>
                        Profil
                      </Link>
                      <Link className="dropdown-item" to='/pages/categoriaslista/cervices'>
                        publicar anuncio
                      </Link>
                      <Link className="dropdown-item" to='/pages/mapa'>
                        mapa
                      </Link>

                      <Link className="dropdown-item" to='/pages/provacodigo'>
                        prova codigo
                      </Link>


                      <Link className="dropdown-item" to='/pages/filterss'>
                        filters
                      </Link>
                      <Link className="dropdown-item" to='/pages/cervicios'>
                        Cervicios
                      </Link>
                      <Link className="dropdown-item" to='/pages/administracion/index'>
                        administracion index
                      </Link>
                      <label
                        htmlFor="theme"
                        className="dropdown-item"
                        onClick={() =>
                          dispatch({
                            type: GLOBALTYPES.THEME,
                            payload: !theme,
                          })
                        }
                      >
                        {theme ? 'Light mode' : 'Dark mode'}
                      </label>
                      <div className="dropdown-divider"></div>
                      <Link
                        className="dropdown-item"
                        to="/"
                        onClick={() => dispatch(logout())}
                      >
                        Se déconnecter
                      </Link>
                    </div>
                  </li>
                )}
              </>
            ) : (
              <>
                <li className="nav-item">
                  <Link className="nav-link " style={{ color: '#80DEEA' }} to="/login">
                    <i className="fa fa-user" style={{ color: 'blue', marginRight: '5px' }}></i>
                    {' '}    Connexion
                  </Link>
                </li>




              </>
            )}





          </NavDropdown>

          <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} />
          
          <Navbar.Offcanvas
            id={`offcanvasNavbar-expand-${expand}`}
            aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}
            placement="end"
          >
        
            <Nav className="justify-content-end flex-grow-1 pe-3">

              <form className="d-flex" style={{ width: '80%' }}  >
                <div>
 
 

                  <div className="search-container  mb-2 mt-2">
                    <Wilayacommune
                      selectedWilaya={wilayaValue}
                      setSelectedWilaya={setWilayaValue}
                      selectedCommune={communeValue}
                      setSelectedCommune={setCommuneValue} />
                  </div>

                  <Form.Control
                    type="text"
                    name='contentValue'
                    value={contentValue}
                    placeholder="Search"
                    className="me-2"
                    aria-label="Search"
                    onChange={(e) => setContent(e.target.value)}
                  />

                  <Locacionprecioautomobile prixsalle={prixsalle} />


                  <div className="search-container card-body   mb-2 mt-2" style={{ display: 'flex', justifyContent: 'space-between' }}>
                    <button
                      type="button"
                      onClick={() => setShowSearchFields(!showSearchFields)}

                      className="btn btn-coral  form-control mt-2"
                    >
                      recherche
                      <i className={`fas fa-search ${showSearchFields ? 'active' : ''}`} style={{ marginRight: '5px' }}></i>
                    </button>



                    <div className="search-container card-body   mb-2 mt-2" style={{ display: 'flex', justifyContent: 'space-between' }}>
                      <button type="button" onClick={handleBuscar} className="btn btn-primary" >
                        Filtre

                      </button>



                      <button type="button" onClick={handleReset} className="btn btn-secondary mr-2">
                        <i className="fas fa-redo" style={{ cursor: 'pointer' }} />
                      </button>
                    </div>

                  </div>
                </div>




              </form>





            </Nav>
 
          </Navbar.Offcanvas>
        </Container>
      </Navbar>

    </>
  );
}


export default Header;




